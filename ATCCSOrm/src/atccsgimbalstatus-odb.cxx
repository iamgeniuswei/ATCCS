// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#include <odb/pre.hxx>

#include "atccsgimbalstatus-odb.hxx"

#include <cassert>
#include <cstring>  // std::memcpy


#include <odb/pgsql/traits.hxx>
#include <odb/pgsql/database.hxx>
#include <odb/pgsql/transaction.hxx>
#include <odb/pgsql/connection.hxx>
#include <odb/pgsql/statement.hxx>
#include <odb/pgsql/statement-cache.hxx>
#include <odb/pgsql/simple-object-statements.hxx>
#include <odb/pgsql/container-statements.hxx>
#include <odb/pgsql/exceptions.hxx>
#include <odb/pgsql/simple-object-result.hxx>

namespace odb
{
  // atccsgimbalstatus
  //

  bool access::object_traits_impl< ::atccsgimbalstatus, id_pgsql >::
  grow (image_type& i,
        bool* t)
  {
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (t);

    bool grew (false);

    // atccspublicstatus base
    //
    if (object_traits_impl< ::atccspublicstatus, id_pgsql >::grow (
          i, t + 0UL))
      grew = true;

    // _trackObjectName
    //
    if (t[8UL])
    {
      i._trackObjectName_value.capacity (i._trackObjectName_size);
      grew = true;
    }

    // _siderealTime
    //
    t[9UL] = 0;

    // _hourAngle
    //
    t[10UL] = 0;

    // _rightAscension
    //
    t[11UL] = 0;

    // _declination
    //
    t[12UL] = 0;

    // _J2000RightAscension
    //
    t[13UL] = 0;

    // _J2000Declination
    //
    t[14UL] = 0;

    // _azmiuth
    //
    t[15UL] = 0;

    // _elevation
    //
    t[16UL] = 0;

    // _derotatorPositon
    //
    t[17UL] = 0;

    // _targetRightAscension
    //
    t[18UL] = 0;

    // _targetDeclination
    //
    t[19UL] = 0;

    // _targetJ2000RightAscension
    //
    t[20UL] = 0;

    // _targetJ2000Declination
    //
    t[21UL] = 0;

    // _targetAzmiuth
    //
    t[22UL] = 0;

    // _targetElevation
    //
    t[23UL] = 0;

    // _targetDerotatorPosition
    //
    t[24UL] = 0;

    // _axis1TrackError
    //
    t[25UL] = 0;

    // _axis2TrackError
    //
    t[26UL] = 0;

    // _axis3TrackError
    //
    t[27UL] = 0;

    // _axis4Angle
    //
    t[28UL] = 0;

    // _coverPosition
    //
    t[29UL] = 0;

    // _targetAxis4Angle
    //
    t[30UL] = 0;

    // _axis1Speed
    //
    t[31UL] = 0;

    // _axis2Speed
    //
    t[32UL] = 0;

    // _axis3Speed
    //
    t[33UL] = 0;

    // _refractionCorrection
    //
    t[34UL] = 0;

    // _axis1Encoder
    //
    t[35UL] = 0;

    // _axis2Encoder
    //
    t[36UL] = 0;

    // _axis3Encoder
    //
    t[37UL] = 0;

    // _axis1PMCorrection
    //
    t[38UL] = 0;

    // _axis2PMCorrection
    //
    t[39UL] = 0;

    // _axis3PMCorrection
    //
    t[40UL] = 0;

    // _axis1ManualCorrection
    //
    t[41UL] = 0;

    // _axis2ManualCorrection
    //
    t[42UL] = 0;

    // _axis3ManualCorrection
    //
    t[43UL] = 0;

    // _temperature1
    //
    t[44UL] = 0;

    // _temperature2
    //
    t[45UL] = 0;

    // _temperature3
    //
    t[46UL] = 0;

    // _temperature4
    //
    t[47UL] = 0;

    // _temperature5
    //
    t[48UL] = 0;

    // _temperature6
    //
    t[49UL] = 0;

    // _temperature7
    //
    t[50UL] = 0;

    // _temperature8
    //
    t[51UL] = 0;

    // _temperature9
    //
    t[52UL] = 0;

    // _temperature10
    //
    t[53UL] = 0;

    // _temperature11
    //
    t[54UL] = 0;

    // _temperature12
    //
    t[55UL] = 0;

    // _humidity1
    //
    t[56UL] = 0;

    // _humidity2
    //
    t[57UL] = 0;

    // _humidity3
    //
    t[58UL] = 0;

    // _humidity4
    //
    t[59UL] = 0;

    // _humidity5
    //
    t[60UL] = 0;

    // _humidity6
    //
    t[61UL] = 0;

    // _humidity7
    //
    t[62UL] = 0;

    // _humidity8
    //
    t[63UL] = 0;

    // _humidity9
    //
    t[64UL] = 0;

    // _humidity10
    //
    t[65UL] = 0;

    // _humidity11
    //
    t[66UL] = 0;

    // _humidity12
    //
    t[67UL] = 0;

    // _focusTypeIndex
    //
    t[68UL] = 0;

    // _coverIndex
    //
    t[69UL] = 0;

    // _targetFocusTypeIndex
    //
    t[70UL] = 0;

    // _targetCoverIndex
    //
    t[71UL] = 0;

    // _trackType
    //
    t[72UL] = 0;

    // _axis3Mode
    //
    t[73UL] = 0;

    // _pieSide
    //
    t[74UL] = 0;

    // _targetPieSide
    //
    t[75UL] = 0;

    // _isAxis1FindHome
    //
    t[76UL] = 0;

    // _isAxis2FindHome
    //
    t[77UL] = 0;

    // _isAxis3FindHome
    //
    t[78UL] = 0;

    return grew;
  }

  void access::object_traits_impl< ::atccsgimbalstatus, id_pgsql >::
  bind (pgsql::bind* b,
        image_type& i,
        pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    std::size_t n (0);

    // atccspublicstatus base
    //
    object_traits_impl< ::atccspublicstatus, id_pgsql >::bind (b + n, i, sk);
    n += sk == statement_select ? 8UL : 7UL;

    // _trackObjectName
    //
    b[n].type = pgsql::bind::text;
    b[n].buffer = i._trackObjectName_value.data ();
    b[n].capacity = i._trackObjectName_value.capacity ();
    b[n].size = &i._trackObjectName_size;
    b[n].is_null = &i._trackObjectName_null;
    n++;

    // _siderealTime
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._siderealTime_value;
    b[n].is_null = &i._siderealTime_null;
    n++;

    // _hourAngle
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._hourAngle_value;
    b[n].is_null = &i._hourAngle_null;
    n++;

    // _rightAscension
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._rightAscension_value;
    b[n].is_null = &i._rightAscension_null;
    n++;

    // _declination
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._declination_value;
    b[n].is_null = &i._declination_null;
    n++;

    // _J2000RightAscension
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._J2000RightAscension_value;
    b[n].is_null = &i._J2000RightAscension_null;
    n++;

    // _J2000Declination
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._J2000Declination_value;
    b[n].is_null = &i._J2000Declination_null;
    n++;

    // _azmiuth
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._azmiuth_value;
    b[n].is_null = &i._azmiuth_null;
    n++;

    // _elevation
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._elevation_value;
    b[n].is_null = &i._elevation_null;
    n++;

    // _derotatorPositon
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._derotatorPositon_value;
    b[n].is_null = &i._derotatorPositon_null;
    n++;

    // _targetRightAscension
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetRightAscension_value;
    b[n].is_null = &i._targetRightAscension_null;
    n++;

    // _targetDeclination
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetDeclination_value;
    b[n].is_null = &i._targetDeclination_null;
    n++;

    // _targetJ2000RightAscension
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetJ2000RightAscension_value;
    b[n].is_null = &i._targetJ2000RightAscension_null;
    n++;

    // _targetJ2000Declination
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetJ2000Declination_value;
    b[n].is_null = &i._targetJ2000Declination_null;
    n++;

    // _targetAzmiuth
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetAzmiuth_value;
    b[n].is_null = &i._targetAzmiuth_null;
    n++;

    // _targetElevation
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetElevation_value;
    b[n].is_null = &i._targetElevation_null;
    n++;

    // _targetDerotatorPosition
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetDerotatorPosition_value;
    b[n].is_null = &i._targetDerotatorPosition_null;
    n++;

    // _axis1TrackError
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis1TrackError_value;
    b[n].is_null = &i._axis1TrackError_null;
    n++;

    // _axis2TrackError
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis2TrackError_value;
    b[n].is_null = &i._axis2TrackError_null;
    n++;

    // _axis3TrackError
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis3TrackError_value;
    b[n].is_null = &i._axis3TrackError_null;
    n++;

    // _axis4Angle
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis4Angle_value;
    b[n].is_null = &i._axis4Angle_null;
    n++;

    // _coverPosition
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._coverPosition_value;
    b[n].is_null = &i._coverPosition_null;
    n++;

    // _targetAxis4Angle
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._targetAxis4Angle_value;
    b[n].is_null = &i._targetAxis4Angle_null;
    n++;

    // _axis1Speed
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis1Speed_value;
    b[n].is_null = &i._axis1Speed_null;
    n++;

    // _axis2Speed
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis2Speed_value;
    b[n].is_null = &i._axis2Speed_null;
    n++;

    // _axis3Speed
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis3Speed_value;
    b[n].is_null = &i._axis3Speed_null;
    n++;

    // _refractionCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._refractionCorrection_value;
    b[n].is_null = &i._refractionCorrection_null;
    n++;

    // _axis1Encoder
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis1Encoder_value;
    b[n].is_null = &i._axis1Encoder_null;
    n++;

    // _axis2Encoder
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis2Encoder_value;
    b[n].is_null = &i._axis2Encoder_null;
    n++;

    // _axis3Encoder
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis3Encoder_value;
    b[n].is_null = &i._axis3Encoder_null;
    n++;

    // _axis1PMCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis1PMCorrection_value;
    b[n].is_null = &i._axis1PMCorrection_null;
    n++;

    // _axis2PMCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis2PMCorrection_value;
    b[n].is_null = &i._axis2PMCorrection_null;
    n++;

    // _axis3PMCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis3PMCorrection_value;
    b[n].is_null = &i._axis3PMCorrection_null;
    n++;

    // _axis1ManualCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis1ManualCorrection_value;
    b[n].is_null = &i._axis1ManualCorrection_null;
    n++;

    // _axis2ManualCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis2ManualCorrection_value;
    b[n].is_null = &i._axis2ManualCorrection_null;
    n++;

    // _axis3ManualCorrection
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._axis3ManualCorrection_value;
    b[n].is_null = &i._axis3ManualCorrection_null;
    n++;

    // _temperature1
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature1_value;
    b[n].is_null = &i._temperature1_null;
    n++;

    // _temperature2
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature2_value;
    b[n].is_null = &i._temperature2_null;
    n++;

    // _temperature3
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature3_value;
    b[n].is_null = &i._temperature3_null;
    n++;

    // _temperature4
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature4_value;
    b[n].is_null = &i._temperature4_null;
    n++;

    // _temperature5
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature5_value;
    b[n].is_null = &i._temperature5_null;
    n++;

    // _temperature6
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature6_value;
    b[n].is_null = &i._temperature6_null;
    n++;

    // _temperature7
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature7_value;
    b[n].is_null = &i._temperature7_null;
    n++;

    // _temperature8
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature8_value;
    b[n].is_null = &i._temperature8_null;
    n++;

    // _temperature9
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature9_value;
    b[n].is_null = &i._temperature9_null;
    n++;

    // _temperature10
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature10_value;
    b[n].is_null = &i._temperature10_null;
    n++;

    // _temperature11
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature11_value;
    b[n].is_null = &i._temperature11_null;
    n++;

    // _temperature12
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._temperature12_value;
    b[n].is_null = &i._temperature12_null;
    n++;

    // _humidity1
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity1_value;
    b[n].is_null = &i._humidity1_null;
    n++;

    // _humidity2
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity2_value;
    b[n].is_null = &i._humidity2_null;
    n++;

    // _humidity3
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity3_value;
    b[n].is_null = &i._humidity3_null;
    n++;

    // _humidity4
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity4_value;
    b[n].is_null = &i._humidity4_null;
    n++;

    // _humidity5
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity5_value;
    b[n].is_null = &i._humidity5_null;
    n++;

    // _humidity6
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity6_value;
    b[n].is_null = &i._humidity6_null;
    n++;

    // _humidity7
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity7_value;
    b[n].is_null = &i._humidity7_null;
    n++;

    // _humidity8
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity8_value;
    b[n].is_null = &i._humidity8_null;
    n++;

    // _humidity9
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity9_value;
    b[n].is_null = &i._humidity9_null;
    n++;

    // _humidity10
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity10_value;
    b[n].is_null = &i._humidity10_null;
    n++;

    // _humidity11
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity11_value;
    b[n].is_null = &i._humidity11_null;
    n++;

    // _humidity12
    //
    b[n].type = pgsql::bind::double_;
    b[n].buffer = &i._humidity12_value;
    b[n].is_null = &i._humidity12_null;
    n++;

    // _focusTypeIndex
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._focusTypeIndex_value;
    b[n].is_null = &i._focusTypeIndex_null;
    n++;

    // _coverIndex
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._coverIndex_value;
    b[n].is_null = &i._coverIndex_null;
    n++;

    // _targetFocusTypeIndex
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._targetFocusTypeIndex_value;
    b[n].is_null = &i._targetFocusTypeIndex_null;
    n++;

    // _targetCoverIndex
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._targetCoverIndex_value;
    b[n].is_null = &i._targetCoverIndex_null;
    n++;

    // _trackType
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._trackType_value;
    b[n].is_null = &i._trackType_null;
    n++;

    // _axis3Mode
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._axis3Mode_value;
    b[n].is_null = &i._axis3Mode_null;
    n++;

    // _pieSide
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._pieSide_value;
    b[n].is_null = &i._pieSide_null;
    n++;

    // _targetPieSide
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._targetPieSide_value;
    b[n].is_null = &i._targetPieSide_null;
    n++;

    // _isAxis1FindHome
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._isAxis1FindHome_value;
    b[n].is_null = &i._isAxis1FindHome_null;
    n++;

    // _isAxis2FindHome
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._isAxis2FindHome_value;
    b[n].is_null = &i._isAxis2FindHome_null;
    n++;

    // _isAxis3FindHome
    //
    b[n].type = pgsql::bind::smallint;
    b[n].buffer = &i._isAxis3FindHome_value;
    b[n].is_null = &i._isAxis3FindHome_null;
    n++;
  }

  bool access::object_traits_impl< ::atccsgimbalstatus, id_pgsql >::
  init (image_type& i,
        const object_type& o,
        pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (o);
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    bool grew (false);

    // atccspublicstatus base
    //
    if (object_traits_impl< ::atccspublicstatus, id_pgsql >::init (i, o, sk))
      grew = true;

    // _trackObjectName
    //
    {
      ::std::string const& v =
        o._trackObjectName;

      bool is_null (false);
      std::size_t size (0);
      std::size_t cap (i._trackObjectName_value.capacity ());
      pgsql::value_traits<
          ::std::string,
          pgsql::id_string >::set_image (
        i._trackObjectName_value,
        size,
        is_null,
        v);
      i._trackObjectName_null = is_null;
      i._trackObjectName_size = size;
      grew = grew || (cap != i._trackObjectName_value.capacity ());
    }

    // _siderealTime
    //
    {
      double const& v =
        o._siderealTime;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._siderealTime_value, is_null, v);
      i._siderealTime_null = is_null;
    }

    // _hourAngle
    //
    {
      double const& v =
        o._hourAngle;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._hourAngle_value, is_null, v);
      i._hourAngle_null = is_null;
    }

    // _rightAscension
    //
    {
      double const& v =
        o._rightAscension;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._rightAscension_value, is_null, v);
      i._rightAscension_null = is_null;
    }

    // _declination
    //
    {
      double const& v =
        o._declination;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._declination_value, is_null, v);
      i._declination_null = is_null;
    }

    // _J2000RightAscension
    //
    {
      double const& v =
        o._J2000RightAscension;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._J2000RightAscension_value, is_null, v);
      i._J2000RightAscension_null = is_null;
    }

    // _J2000Declination
    //
    {
      double const& v =
        o._J2000Declination;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._J2000Declination_value, is_null, v);
      i._J2000Declination_null = is_null;
    }

    // _azmiuth
    //
    {
      double const& v =
        o._azmiuth;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._azmiuth_value, is_null, v);
      i._azmiuth_null = is_null;
    }

    // _elevation
    //
    {
      double const& v =
        o._elevation;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._elevation_value, is_null, v);
      i._elevation_null = is_null;
    }

    // _derotatorPositon
    //
    {
      double const& v =
        o._derotatorPositon;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._derotatorPositon_value, is_null, v);
      i._derotatorPositon_null = is_null;
    }

    // _targetRightAscension
    //
    {
      double const& v =
        o._targetRightAscension;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetRightAscension_value, is_null, v);
      i._targetRightAscension_null = is_null;
    }

    // _targetDeclination
    //
    {
      double const& v =
        o._targetDeclination;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetDeclination_value, is_null, v);
      i._targetDeclination_null = is_null;
    }

    // _targetJ2000RightAscension
    //
    {
      double const& v =
        o._targetJ2000RightAscension;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetJ2000RightAscension_value, is_null, v);
      i._targetJ2000RightAscension_null = is_null;
    }

    // _targetJ2000Declination
    //
    {
      double const& v =
        o._targetJ2000Declination;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetJ2000Declination_value, is_null, v);
      i._targetJ2000Declination_null = is_null;
    }

    // _targetAzmiuth
    //
    {
      double const& v =
        o._targetAzmiuth;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetAzmiuth_value, is_null, v);
      i._targetAzmiuth_null = is_null;
    }

    // _targetElevation
    //
    {
      double const& v =
        o._targetElevation;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetElevation_value, is_null, v);
      i._targetElevation_null = is_null;
    }

    // _targetDerotatorPosition
    //
    {
      double const& v =
        o._targetDerotatorPosition;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetDerotatorPosition_value, is_null, v);
      i._targetDerotatorPosition_null = is_null;
    }

    // _axis1TrackError
    //
    {
      double const& v =
        o._axis1TrackError;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis1TrackError_value, is_null, v);
      i._axis1TrackError_null = is_null;
    }

    // _axis2TrackError
    //
    {
      double const& v =
        o._axis2TrackError;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis2TrackError_value, is_null, v);
      i._axis2TrackError_null = is_null;
    }

    // _axis3TrackError
    //
    {
      double const& v =
        o._axis3TrackError;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis3TrackError_value, is_null, v);
      i._axis3TrackError_null = is_null;
    }

    // _axis4Angle
    //
    {
      double const& v =
        o._axis4Angle;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis4Angle_value, is_null, v);
      i._axis4Angle_null = is_null;
    }

    // _coverPosition
    //
    {
      double const& v =
        o._coverPosition;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._coverPosition_value, is_null, v);
      i._coverPosition_null = is_null;
    }

    // _targetAxis4Angle
    //
    {
      double const& v =
        o._targetAxis4Angle;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._targetAxis4Angle_value, is_null, v);
      i._targetAxis4Angle_null = is_null;
    }

    // _axis1Speed
    //
    {
      double const& v =
        o._axis1Speed;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis1Speed_value, is_null, v);
      i._axis1Speed_null = is_null;
    }

    // _axis2Speed
    //
    {
      double const& v =
        o._axis2Speed;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis2Speed_value, is_null, v);
      i._axis2Speed_null = is_null;
    }

    // _axis3Speed
    //
    {
      double const& v =
        o._axis3Speed;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis3Speed_value, is_null, v);
      i._axis3Speed_null = is_null;
    }

    // _refractionCorrection
    //
    {
      double const& v =
        o._refractionCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._refractionCorrection_value, is_null, v);
      i._refractionCorrection_null = is_null;
    }

    // _axis1Encoder
    //
    {
      double const& v =
        o._axis1Encoder;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis1Encoder_value, is_null, v);
      i._axis1Encoder_null = is_null;
    }

    // _axis2Encoder
    //
    {
      double const& v =
        o._axis2Encoder;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis2Encoder_value, is_null, v);
      i._axis2Encoder_null = is_null;
    }

    // _axis3Encoder
    //
    {
      double const& v =
        o._axis3Encoder;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis3Encoder_value, is_null, v);
      i._axis3Encoder_null = is_null;
    }

    // _axis1PMCorrection
    //
    {
      double const& v =
        o._axis1PMCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis1PMCorrection_value, is_null, v);
      i._axis1PMCorrection_null = is_null;
    }

    // _axis2PMCorrection
    //
    {
      double const& v =
        o._axis2PMCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis2PMCorrection_value, is_null, v);
      i._axis2PMCorrection_null = is_null;
    }

    // _axis3PMCorrection
    //
    {
      double const& v =
        o._axis3PMCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis3PMCorrection_value, is_null, v);
      i._axis3PMCorrection_null = is_null;
    }

    // _axis1ManualCorrection
    //
    {
      double const& v =
        o._axis1ManualCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis1ManualCorrection_value, is_null, v);
      i._axis1ManualCorrection_null = is_null;
    }

    // _axis2ManualCorrection
    //
    {
      double const& v =
        o._axis2ManualCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis2ManualCorrection_value, is_null, v);
      i._axis2ManualCorrection_null = is_null;
    }

    // _axis3ManualCorrection
    //
    {
      double const& v =
        o._axis3ManualCorrection;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._axis3ManualCorrection_value, is_null, v);
      i._axis3ManualCorrection_null = is_null;
    }

    // _temperature1
    //
    {
      double const& v =
        o._temperature1;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature1_value, is_null, v);
      i._temperature1_null = is_null;
    }

    // _temperature2
    //
    {
      double const& v =
        o._temperature2;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature2_value, is_null, v);
      i._temperature2_null = is_null;
    }

    // _temperature3
    //
    {
      double const& v =
        o._temperature3;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature3_value, is_null, v);
      i._temperature3_null = is_null;
    }

    // _temperature4
    //
    {
      double const& v =
        o._temperature4;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature4_value, is_null, v);
      i._temperature4_null = is_null;
    }

    // _temperature5
    //
    {
      double const& v =
        o._temperature5;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature5_value, is_null, v);
      i._temperature5_null = is_null;
    }

    // _temperature6
    //
    {
      double const& v =
        o._temperature6;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature6_value, is_null, v);
      i._temperature6_null = is_null;
    }

    // _temperature7
    //
    {
      double const& v =
        o._temperature7;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature7_value, is_null, v);
      i._temperature7_null = is_null;
    }

    // _temperature8
    //
    {
      double const& v =
        o._temperature8;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature8_value, is_null, v);
      i._temperature8_null = is_null;
    }

    // _temperature9
    //
    {
      double const& v =
        o._temperature9;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature9_value, is_null, v);
      i._temperature9_null = is_null;
    }

    // _temperature10
    //
    {
      double const& v =
        o._temperature10;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature10_value, is_null, v);
      i._temperature10_null = is_null;
    }

    // _temperature11
    //
    {
      double const& v =
        o._temperature11;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature11_value, is_null, v);
      i._temperature11_null = is_null;
    }

    // _temperature12
    //
    {
      double const& v =
        o._temperature12;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._temperature12_value, is_null, v);
      i._temperature12_null = is_null;
    }

    // _humidity1
    //
    {
      double const& v =
        o._humidity1;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity1_value, is_null, v);
      i._humidity1_null = is_null;
    }

    // _humidity2
    //
    {
      double const& v =
        o._humidity2;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity2_value, is_null, v);
      i._humidity2_null = is_null;
    }

    // _humidity3
    //
    {
      double const& v =
        o._humidity3;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity3_value, is_null, v);
      i._humidity3_null = is_null;
    }

    // _humidity4
    //
    {
      double const& v =
        o._humidity4;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity4_value, is_null, v);
      i._humidity4_null = is_null;
    }

    // _humidity5
    //
    {
      double const& v =
        o._humidity5;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity5_value, is_null, v);
      i._humidity5_null = is_null;
    }

    // _humidity6
    //
    {
      double const& v =
        o._humidity6;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity6_value, is_null, v);
      i._humidity6_null = is_null;
    }

    // _humidity7
    //
    {
      double const& v =
        o._humidity7;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity7_value, is_null, v);
      i._humidity7_null = is_null;
    }

    // _humidity8
    //
    {
      double const& v =
        o._humidity8;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity8_value, is_null, v);
      i._humidity8_null = is_null;
    }

    // _humidity9
    //
    {
      double const& v =
        o._humidity9;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity9_value, is_null, v);
      i._humidity9_null = is_null;
    }

    // _humidity10
    //
    {
      double const& v =
        o._humidity10;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity10_value, is_null, v);
      i._humidity10_null = is_null;
    }

    // _humidity11
    //
    {
      double const& v =
        o._humidity11;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity11_value, is_null, v);
      i._humidity11_null = is_null;
    }

    // _humidity12
    //
    {
      double const& v =
        o._humidity12;

      bool is_null (false);
      pgsql::value_traits<
          double,
          pgsql::id_double >::set_image (
        i._humidity12_value, is_null, v);
      i._humidity12_null = is_null;
    }

    // _focusTypeIndex
    //
    {
      short unsigned int const& v =
        o._focusTypeIndex;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._focusTypeIndex_value, is_null, v);
      i._focusTypeIndex_null = is_null;
    }

    // _coverIndex
    //
    {
      short unsigned int const& v =
        o._coverIndex;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._coverIndex_value, is_null, v);
      i._coverIndex_null = is_null;
    }

    // _targetFocusTypeIndex
    //
    {
      short unsigned int const& v =
        o._targetFocusTypeIndex;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._targetFocusTypeIndex_value, is_null, v);
      i._targetFocusTypeIndex_null = is_null;
    }

    // _targetCoverIndex
    //
    {
      short unsigned int const& v =
        o._targetCoverIndex;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._targetCoverIndex_value, is_null, v);
      i._targetCoverIndex_null = is_null;
    }

    // _trackType
    //
    {
      short unsigned int const& v =
        o._trackType;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._trackType_value, is_null, v);
      i._trackType_null = is_null;
    }

    // _axis3Mode
    //
    {
      short unsigned int const& v =
        o._axis3Mode;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._axis3Mode_value, is_null, v);
      i._axis3Mode_null = is_null;
    }

    // _pieSide
    //
    {
      short unsigned int const& v =
        o._pieSide;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._pieSide_value, is_null, v);
      i._pieSide_null = is_null;
    }

    // _targetPieSide
    //
    {
      short unsigned int const& v =
        o._targetPieSide;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._targetPieSide_value, is_null, v);
      i._targetPieSide_null = is_null;
    }

    // _isAxis1FindHome
    //
    {
      short unsigned int const& v =
        o._isAxis1FindHome;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._isAxis1FindHome_value, is_null, v);
      i._isAxis1FindHome_null = is_null;
    }

    // _isAxis2FindHome
    //
    {
      short unsigned int const& v =
        o._isAxis2FindHome;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._isAxis2FindHome_value, is_null, v);
      i._isAxis2FindHome_null = is_null;
    }

    // _isAxis3FindHome
    //
    {
      short unsigned int const& v =
        o._isAxis3FindHome;

      bool is_null (false);
      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_image (
        i._isAxis3FindHome_value, is_null, v);
      i._isAxis3FindHome_null = is_null;
    }

    return grew;
  }

  void access::object_traits_impl< ::atccsgimbalstatus, id_pgsql >::
  init (object_type& o,
        const image_type& i,
        database* db)
  {
    ODB_POTENTIALLY_UNUSED (o);
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (db);

    // atccspublicstatus base
    //
    object_traits_impl< ::atccspublicstatus, id_pgsql >::init (o, i, db);

    // _trackObjectName
    //
    {
      ::std::string& v =
        o._trackObjectName;

      pgsql::value_traits<
          ::std::string,
          pgsql::id_string >::set_value (
        v,
        i._trackObjectName_value,
        i._trackObjectName_size,
        i._trackObjectName_null);
    }

    // _siderealTime
    //
    {
      double& v =
        o._siderealTime;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._siderealTime_value,
        i._siderealTime_null);
    }

    // _hourAngle
    //
    {
      double& v =
        o._hourAngle;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._hourAngle_value,
        i._hourAngle_null);
    }

    // _rightAscension
    //
    {
      double& v =
        o._rightAscension;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._rightAscension_value,
        i._rightAscension_null);
    }

    // _declination
    //
    {
      double& v =
        o._declination;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._declination_value,
        i._declination_null);
    }

    // _J2000RightAscension
    //
    {
      double& v =
        o._J2000RightAscension;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._J2000RightAscension_value,
        i._J2000RightAscension_null);
    }

    // _J2000Declination
    //
    {
      double& v =
        o._J2000Declination;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._J2000Declination_value,
        i._J2000Declination_null);
    }

    // _azmiuth
    //
    {
      double& v =
        o._azmiuth;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._azmiuth_value,
        i._azmiuth_null);
    }

    // _elevation
    //
    {
      double& v =
        o._elevation;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._elevation_value,
        i._elevation_null);
    }

    // _derotatorPositon
    //
    {
      double& v =
        o._derotatorPositon;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._derotatorPositon_value,
        i._derotatorPositon_null);
    }

    // _targetRightAscension
    //
    {
      double& v =
        o._targetRightAscension;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetRightAscension_value,
        i._targetRightAscension_null);
    }

    // _targetDeclination
    //
    {
      double& v =
        o._targetDeclination;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetDeclination_value,
        i._targetDeclination_null);
    }

    // _targetJ2000RightAscension
    //
    {
      double& v =
        o._targetJ2000RightAscension;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetJ2000RightAscension_value,
        i._targetJ2000RightAscension_null);
    }

    // _targetJ2000Declination
    //
    {
      double& v =
        o._targetJ2000Declination;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetJ2000Declination_value,
        i._targetJ2000Declination_null);
    }

    // _targetAzmiuth
    //
    {
      double& v =
        o._targetAzmiuth;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetAzmiuth_value,
        i._targetAzmiuth_null);
    }

    // _targetElevation
    //
    {
      double& v =
        o._targetElevation;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetElevation_value,
        i._targetElevation_null);
    }

    // _targetDerotatorPosition
    //
    {
      double& v =
        o._targetDerotatorPosition;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetDerotatorPosition_value,
        i._targetDerotatorPosition_null);
    }

    // _axis1TrackError
    //
    {
      double& v =
        o._axis1TrackError;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis1TrackError_value,
        i._axis1TrackError_null);
    }

    // _axis2TrackError
    //
    {
      double& v =
        o._axis2TrackError;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis2TrackError_value,
        i._axis2TrackError_null);
    }

    // _axis3TrackError
    //
    {
      double& v =
        o._axis3TrackError;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis3TrackError_value,
        i._axis3TrackError_null);
    }

    // _axis4Angle
    //
    {
      double& v =
        o._axis4Angle;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis4Angle_value,
        i._axis4Angle_null);
    }

    // _coverPosition
    //
    {
      double& v =
        o._coverPosition;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._coverPosition_value,
        i._coverPosition_null);
    }

    // _targetAxis4Angle
    //
    {
      double& v =
        o._targetAxis4Angle;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._targetAxis4Angle_value,
        i._targetAxis4Angle_null);
    }

    // _axis1Speed
    //
    {
      double& v =
        o._axis1Speed;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis1Speed_value,
        i._axis1Speed_null);
    }

    // _axis2Speed
    //
    {
      double& v =
        o._axis2Speed;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis2Speed_value,
        i._axis2Speed_null);
    }

    // _axis3Speed
    //
    {
      double& v =
        o._axis3Speed;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis3Speed_value,
        i._axis3Speed_null);
    }

    // _refractionCorrection
    //
    {
      double& v =
        o._refractionCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._refractionCorrection_value,
        i._refractionCorrection_null);
    }

    // _axis1Encoder
    //
    {
      double& v =
        o._axis1Encoder;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis1Encoder_value,
        i._axis1Encoder_null);
    }

    // _axis2Encoder
    //
    {
      double& v =
        o._axis2Encoder;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis2Encoder_value,
        i._axis2Encoder_null);
    }

    // _axis3Encoder
    //
    {
      double& v =
        o._axis3Encoder;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis3Encoder_value,
        i._axis3Encoder_null);
    }

    // _axis1PMCorrection
    //
    {
      double& v =
        o._axis1PMCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis1PMCorrection_value,
        i._axis1PMCorrection_null);
    }

    // _axis2PMCorrection
    //
    {
      double& v =
        o._axis2PMCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis2PMCorrection_value,
        i._axis2PMCorrection_null);
    }

    // _axis3PMCorrection
    //
    {
      double& v =
        o._axis3PMCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis3PMCorrection_value,
        i._axis3PMCorrection_null);
    }

    // _axis1ManualCorrection
    //
    {
      double& v =
        o._axis1ManualCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis1ManualCorrection_value,
        i._axis1ManualCorrection_null);
    }

    // _axis2ManualCorrection
    //
    {
      double& v =
        o._axis2ManualCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis2ManualCorrection_value,
        i._axis2ManualCorrection_null);
    }

    // _axis3ManualCorrection
    //
    {
      double& v =
        o._axis3ManualCorrection;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._axis3ManualCorrection_value,
        i._axis3ManualCorrection_null);
    }

    // _temperature1
    //
    {
      double& v =
        o._temperature1;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature1_value,
        i._temperature1_null);
    }

    // _temperature2
    //
    {
      double& v =
        o._temperature2;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature2_value,
        i._temperature2_null);
    }

    // _temperature3
    //
    {
      double& v =
        o._temperature3;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature3_value,
        i._temperature3_null);
    }

    // _temperature4
    //
    {
      double& v =
        o._temperature4;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature4_value,
        i._temperature4_null);
    }

    // _temperature5
    //
    {
      double& v =
        o._temperature5;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature5_value,
        i._temperature5_null);
    }

    // _temperature6
    //
    {
      double& v =
        o._temperature6;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature6_value,
        i._temperature6_null);
    }

    // _temperature7
    //
    {
      double& v =
        o._temperature7;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature7_value,
        i._temperature7_null);
    }

    // _temperature8
    //
    {
      double& v =
        o._temperature8;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature8_value,
        i._temperature8_null);
    }

    // _temperature9
    //
    {
      double& v =
        o._temperature9;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature9_value,
        i._temperature9_null);
    }

    // _temperature10
    //
    {
      double& v =
        o._temperature10;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature10_value,
        i._temperature10_null);
    }

    // _temperature11
    //
    {
      double& v =
        o._temperature11;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature11_value,
        i._temperature11_null);
    }

    // _temperature12
    //
    {
      double& v =
        o._temperature12;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._temperature12_value,
        i._temperature12_null);
    }

    // _humidity1
    //
    {
      double& v =
        o._humidity1;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity1_value,
        i._humidity1_null);
    }

    // _humidity2
    //
    {
      double& v =
        o._humidity2;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity2_value,
        i._humidity2_null);
    }

    // _humidity3
    //
    {
      double& v =
        o._humidity3;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity3_value,
        i._humidity3_null);
    }

    // _humidity4
    //
    {
      double& v =
        o._humidity4;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity4_value,
        i._humidity4_null);
    }

    // _humidity5
    //
    {
      double& v =
        o._humidity5;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity5_value,
        i._humidity5_null);
    }

    // _humidity6
    //
    {
      double& v =
        o._humidity6;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity6_value,
        i._humidity6_null);
    }

    // _humidity7
    //
    {
      double& v =
        o._humidity7;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity7_value,
        i._humidity7_null);
    }

    // _humidity8
    //
    {
      double& v =
        o._humidity8;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity8_value,
        i._humidity8_null);
    }

    // _humidity9
    //
    {
      double& v =
        o._humidity9;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity9_value,
        i._humidity9_null);
    }

    // _humidity10
    //
    {
      double& v =
        o._humidity10;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity10_value,
        i._humidity10_null);
    }

    // _humidity11
    //
    {
      double& v =
        o._humidity11;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity11_value,
        i._humidity11_null);
    }

    // _humidity12
    //
    {
      double& v =
        o._humidity12;

      pgsql::value_traits<
          double,
          pgsql::id_double >::set_value (
        v,
        i._humidity12_value,
        i._humidity12_null);
    }

    // _focusTypeIndex
    //
    {
      short unsigned int& v =
        o._focusTypeIndex;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._focusTypeIndex_value,
        i._focusTypeIndex_null);
    }

    // _coverIndex
    //
    {
      short unsigned int& v =
        o._coverIndex;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._coverIndex_value,
        i._coverIndex_null);
    }

    // _targetFocusTypeIndex
    //
    {
      short unsigned int& v =
        o._targetFocusTypeIndex;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._targetFocusTypeIndex_value,
        i._targetFocusTypeIndex_null);
    }

    // _targetCoverIndex
    //
    {
      short unsigned int& v =
        o._targetCoverIndex;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._targetCoverIndex_value,
        i._targetCoverIndex_null);
    }

    // _trackType
    //
    {
      short unsigned int& v =
        o._trackType;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._trackType_value,
        i._trackType_null);
    }

    // _axis3Mode
    //
    {
      short unsigned int& v =
        o._axis3Mode;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._axis3Mode_value,
        i._axis3Mode_null);
    }

    // _pieSide
    //
    {
      short unsigned int& v =
        o._pieSide;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._pieSide_value,
        i._pieSide_null);
    }

    // _targetPieSide
    //
    {
      short unsigned int& v =
        o._targetPieSide;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._targetPieSide_value,
        i._targetPieSide_null);
    }

    // _isAxis1FindHome
    //
    {
      short unsigned int& v =
        o._isAxis1FindHome;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._isAxis1FindHome_value,
        i._isAxis1FindHome_null);
    }

    // _isAxis2FindHome
    //
    {
      short unsigned int& v =
        o._isAxis2FindHome;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._isAxis2FindHome_value,
        i._isAxis2FindHome_null);
    }

    // _isAxis3FindHome
    //
    {
      short unsigned int& v =
        o._isAxis3FindHome;

      pgsql::value_traits<
          short unsigned int,
          pgsql::id_smallint >::set_value (
        v,
        i._isAxis3FindHome_value,
        i._isAxis3FindHome_null);
    }
  }
}

#include <odb/post.hxx>
